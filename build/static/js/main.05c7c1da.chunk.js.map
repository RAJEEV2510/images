{"version":3,"sources":["PicsArt_05-27-09.29.17.png","logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","value","setvalue","results","setresults","change","changeset","cssvalue","setCss","useEffect","changes","fetch","then","res","json","data","className","scroll","type","placeholder","onChange","event","target","onClick","style","color","marginLeft","name","map","index","key","src","urls","regular","clipPath","href","download","backgroundColor","width","height","borderBottomColor","marginTop","borderTopColor","marginBottom","borderLeftColor","borderRightColor","boxShadow","Boolean","window","location","hostname","match","Header","display","justifyContent","logo","borderRadius","marginRight","position","left","top","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,oD,uECA3CD,EAAOC,QAAU,IAA0B,kC,kHC6H5BC,MAzHf,WAAe,MAEUC,mBAAS,IAFnB,mBAENC,EAFM,KAEAC,EAFA,OAGcF,mBAAS,IAHvB,mBAGNG,EAHM,KAGEC,EAHF,OAIYJ,oBAAS,GAJrB,mBAINK,EAJM,KAICC,EAJD,OAKWN,mBAAS,iEALpB,mBAKNO,EALM,KAKGC,EALH,KAObC,qBAAU,WAEG,GAARJ,GACHK,OAEF,IAAMA,EAAQ,WAEZC,MAAM,wHAAwHC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAG,GAEvJX,EAAWW,EAAKZ,aA4CpB,OACE,yBAAKa,UAAU,OACf,yBAAKA,UAAU,UACf,4BAAQC,OAAO,QAAf,aAAgC,0BAAMD,UAAU,QAAhB,SAAhC,aAGA,yBAAKA,UAAU,SACf,yCACA,2BAAOE,KAAK,OAAOjB,MAAOA,EAAOkB,YAAY,gBAAgBC,SAAU,SAACC,GACtEnB,EAASmB,EAAMC,OAAOrB,UAKxB,4BAAQe,UAAU,MAAMO,QArDR,WAEjBZ,MAAM,sGAAD,OAAuGV,EAAvG,oBAA+HW,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAG,GAE9JX,EAAWW,EAAKZ,SAChBG,GAAU,QAgDV,WAEA,yBAAKU,UAAU,SAAQ,gCACvB,wBAAIQ,MAAO,CAACC,MAAM,QAASC,WAAW,SAAtC,oCAGA,4BAAQC,KAAK,SAASP,SAlDhB,SAACC,GAEa,YAArBA,EAAMC,OAAOrB,MAEdO,EAAO,iEAEoB,aAArBa,EAAMC,OAAOrB,MAErBO,EAAO,uCAEsB,iBAArBa,EAAMC,OAAOrB,MAEnBO,EAAO,+CAEoB,WAArBa,EAAMC,OAAOrB,MAEnBO,EAAO,yBAGoB,WAArBa,EAAMC,OAAOrB,MAEnBO,EAAO,uHAGoB,WAArBa,EAAMC,OAAOrB,OAEnBO,EAAO,4BAyBL,4BAAQP,MAAM,WAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,gBAAd,iBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,aAMA,yBAAKe,UAAU,aAEfb,EAAQyB,KAAI,SAAC3B,EAAM4B,GACjB,OAAQ,oCAEN,6BACA,yBAAKC,IAAKD,EAAOE,IAAK9B,EAAM+B,KAAKC,QACjCT,MAAO,CACLU,SAAS3B,KAEP,uBAAI4B,KAAI,UAAKlC,EAAM+B,KAAKC,QAAhB,wBAA+CG,SAAS,IAChE,4BAAQZ,MAAO,CAACC,MAAM,UAAUY,gBAAgB,QAAQC,MAAM,QAAQC,OAAO,OAAOb,WAAW,QAAQc,kBAAkB,UAAWC,UAAU,OAChJC,eAAe,UAAUC,aAAa,OAAOC,gBAAgB,UAAUC,iBAAiB,UAAUC,UAAU,sBAD1G,qBC/FQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVN,SAASC,IAET,OAAO,oCAEP,yBAAK5B,MAAO,CAACc,MAAM,OAAOD,gBAAgB,QAAQE,OAAO,OAAOc,QAAQ,OAAOC,eAAe,iBAC9F,6BACE,yBAAKvB,IAAKwB,IAAM/B,MAAO,CAACe,OAAO,QAAQD,MAAM,QAAQkB,aAAa,MAAMf,UAAU,OAAOf,WAAW,OAAO+B,YAAY,UAEvH,6BACA,wBAAIjC,MAAO,CAACC,MAAM,cAAeC,WAAW,SAA5C,gBACA,4BACE,uBAAGS,KAAK,sCAAR,0BACJ,uBAAGA,KAAK,yCAAR,sBACA,uBAAGA,KAAK,IAAR,eACA,uBAAGA,KAAK,2CAAR,eACA,uBAAGA,KAAK,mCAAR,uBAAgE,6BAAhE,mBACA,uBAAGA,KAAK,sCAAR,gBACA,uBAAGA,KAAK,wCAAR,mBACA,uBAAGA,KAAK,yCAAR,uBACA,uBAAGA,KAAK,6BAAR,mBACA,uBAAGA,KAAK,wCAAR,mBACA,uBAAGA,KAAK,qCAAR,qBACA,uBAAGA,KAAK,uDAAR,iBAOA,yBAAMX,MAAO,CAACkC,SAAS,WAAWC,KAAK,MAAMC,IAAI,SAASnC,MAAM,WAQhEoC,IAASC,OACP,oCACE,kBAAC,EAAD,MACA,kBAACV,EAAD,OAEFW,SAASC,eAAe,SDiFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.05c7c1da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PicsArt_05-27-09.29.17.7c477890.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//SY7vrCxUm2e8Vl88A5dY89Ug8xa2u3wQBFkZ23TdPB0\nfunction App() {\n  //use at the top\n  const [value,setvalue]=useState(\"\")\n  const [results,setresults]=useState([])\n  const [change,changeset]=useState(false)\n  const [cssvalue,setCss]=useState('polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)')\n//using for render the dom \n  useEffect(() => {\n    // Update the document title using the browser API\n    if(change==false)\n    changes()\n  });\n  const changes=()=>{\n  \n    fetch(`https://api.unsplash.com/search/photos?client_id=SY7vrCxUm2e8Vl88A5dY89Ug8xa2u3wQBFkZ23TdPB0&query=loop&per_page=100`).then(res=>res.json()).then(data=>{\n      \n      setresults(data.results)  \n    })\n    \n\n  }\n  const fetchImages=()=>{\n    \n   fetch(`https://api.unsplash.com/search/photos?client_id=SY7vrCxUm2e8Vl88A5dY89Ug8xa2u3wQBFkZ23TdPB0&query=${value}&per_page=10000`).then(res=>res.json()).then(data=>{\n      \n    setresults(data.results)  \n    changeset(true)\n  })\n}\n\nconst css=(event)=>{\n\nif(event.target.value==='hexagon')\n{\n  setCss('polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)')\n}\nelse if(event.target.value==='triangle')\n{\nsetCss('polygon(50% 0%, 0% 100%, 100% 100%)')\n}\nelse if(event.target.value==='paralleogram')\n{\n  setCss('polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%)')\n}\nelse if(event.target.value==='square')\n{\n  setCss('inset(5% 20% 15% 10%)')\n}\n//polygon(0% 15%, 15% 15%, 15% 0%, 85% 0%, 85% 15%, 100% 15%, 100% 85%, 85% 85%, 85% 100%, 15% 100%, 15% 85%, 0% 85%)\nelse if(event.target.value==='rablet')\n{\n  setCss('polygon(0% 15%, 15% 15%, 15% 0%, 85% 0%, 85% 15%, 100% 15%, 100% 85%, 85% 85%, 85% 100%, 15% 100%, 15% 85%, 0% 85%)')\n}\n//circle(50% at 50% 50%);\nelse if(event.target.value==='circle')\n{\n  setCss('circle(50% at 50% 50%)')\n}\n\n}\n  return (\n    <div className=\"App\">\n    <div className=\"header\">\n    <marque scroll=\"left\"> CREATIVE <span className=\"neon\">IMAGE</span> GALLERY</marque>\n    \n    </div>\n    <div className=\"mydiv\">\n    <span>Search:</span>\n    <input type=\"text\" value={value} placeholder=\"search images\" onChange={(event)=>{\n      setvalue(event.target.value);\n\n\n    }}></input>\n\n    <button className=\"btn\" onClick={fetchImages}>Search</button>\n    </div>\n    <div className=\"Shape\"><center>\n    <h2 style={{color:\"white\" ,marginLeft:\"50px\"}}>You can change the shape of pics</h2>\n    \n\n    <select name=\"change\" onChange={css}>\n    <option value=\"hexagon\"> Hexagon</option>\n    <option value=\"triangle\">Triangle</option>\n    <option value=\"paralleogram\">Parralleogram</option>\n    <option value=\"square\">square</option>\n    <option value=\"rablet\">Rablet</option>\n    <option value=\"circle\">circle</option>\n    </select>\n    </center>\n    </div>\n    \n\n    <div className=\"Mygallery\" >\n  {\n    results.map((value,index)=>{\n      return (<>\n        \n        <div>\n        <img key={index} src={value.urls.regular}\n        style={{\n          clipPath:cssvalue}}></img>\n        \n            <a  href={`${value.urls.regular}/download?force=true`} download=\"\">\n            <button style={{color:\"#00F260\",backgroundColor:'black',width:'200px',height:'40px',marginLeft:\"-54px\",borderBottomColor:'#0575E6' ,marginTop:\"20px\",\n          borderTopColor:'#e73827',marginBottom:'30px',borderLeftColor:'#ec008c',borderRightColor:'#ec008c',boxShadow:'2px 2px 10px grey'\n          }}> Preview</button>\n            </a>\n            </div>\n          </>\n      )\n\n    })\n  }      \n    \n    </div>\n    </div>\n    \n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport logo from './PicsArt_05-27-09.29.17.png'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction Header(){\n\nreturn(<>\n\n<div style={{width:\"100%\",backgroundColor:'black',height:'auto',display:'flex',justifyContent:'space-around'}}>\n<div>\n  <img src={logo} style={{height:'100px',width:'100px',borderRadius:'50%',marginTop:'10px',marginLeft:'10px',marginRight:'30%'}}></img>\n</div>\n  <div>\n  <h3 style={{color:'deepskyblue' ,marginLeft:'80px'}}>USEFUL LINKS</h3>\n  <h4> \n    <a href=\"https://codingso.blogspot.com/?m=1\">Data Structure website</a>\n<a href=\"http://techiu.epizy.com/index.php?i=1\" > Portfolio Website</a>\n<a href=\"\" >Github link</a>\n<a href=\"http://techiu.epizy.com/codeeditor.html\"  >Code Editor</a>\n<a href=\"http://passwordv.herokuapp.com/\"  >Password Management <br></br>voice assistant</a>\n<a href=\"https://secretechat.herokuapp.com/\"  >secret Chat </a>\n<a href=\"https://coronaz-react.herokuapp.com/\"  >Corona Tracker </a>\n<a href=\"http://techiu.epizy.com/todolist.html\"  >javscript  Project </a>\n<a href=\"http://coronaz.epizy.com/\"  >Corona Tracker </a>\n<a href=\"http://techiu.epizy.com/project.html\"  >Python Project </a>\n<a href=\"https://techupdateq.blogspot.com/\"  >Teachnology Blog </a>\n<a href=\"https://www.linkedin.com/in/rajeev-kumar-a23791193/\"  >Linked In </a>\n\n</h4>\n  \n  </div>\n  </div>\n\n<div  style={{position:'absolute',left:\"40%\",top:'6300px',color:'pink'}}>\n</div>\n\n  \n  </>)\n\n}\n\nReactDOM.render(\n  <>\n    <App />\n    <Header></Header>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}